package pagamento.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import pagamento.model.Colaborador;
import pagamento.repositories.ColaboradorRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/colaborador") // This means URL's start with /demo (after Application path)
public class ColaboradorController {
	
	
	@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private ColaboradorRepository colaboradorRepository;
	

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser ( @RequestParam String nome, @RequestParam String endereco,
			@RequestParam String telefone, @RequestParam String bairro, @RequestParam String cep, @RequestParam String cpf,
			@RequestParam float salarioAtual) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		Colaborador c = new Colaborador();
		c.setBairro(bairro);
		c.setCep(cep);
		c.setCpf(cpf);
		c.setEndereco(endereco);
		c.setNome(nome);
		c.setSalarioAtual(salarioAtual);
		c.setTelefone(telefone);
		
		
		
		
		colaboradorRepository.save(c);
		return "Salvo";
	}
	@GetMapping(path="/delete") // Map ONLY GET Requests
	public @ResponseBody String deleteById ( @RequestParam int codigo) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request	
		try {
			Colaborador c = new Colaborador(codigo);
			colaboradorRepository.delete(c);
			}
		catch (Exception ex) {
		      return "Error deleting the user:" + ex.toString();
		    }
		    return "Colaborador de codigo: "+codigo+" foi deletado com sucesso";	
	}
	
	
	
	
	
	
	
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<Colaborador> getAllUsers() {
		// This returns a JSON or XML with the users
		return colaboradorRepository.findAll();
	}
	

}
